Logs : for laravelReference 

** Accomplished as of June 18,2017 ** 

- created project 
- created database for the project 
- set lenght for email and token on migration file 
- migrated database for users and password 
- created authentication
- created 1 folder with 3 subfolders :

	- admin 
		- categories
			* index.blade.php
			* edit.blade.php
		- post
			* index.blade.php
			* edit.blade.php
			* create.blade.php
		- users
			* index.blade.php
			* edit.blade.php
			* create.blade.php
	*index.blade.php

- saved project using git (see git folder for reference)
- added role and is_active column on user migration file
- created role migration model using make:model 
- added name column on role model 
- migrated database 
- created role function on user model under providers folder 
- inserted administrator, author and subscriber on role table
- migrate:refresh
- tested relationship using tinker 
- created route for adminusers 
- created AdminUsersController with resources 
- added css, fonts and js file on public folder 
- created admin.blade.php under layouts 
- fixED admin template 
- fixed padding and made commit 
- fetch data from users table and displayed it on users index (see additional notes for functions)
- created creating page for users
- installed laravel collective files see additional notes 
- change status field from textfield to dropdown (see additional notes for function)
- populated data from database to drop down list (see additional notes for function)
- created a password field
- created a Request file for User Creation
- added error message when required fields are not satisfied
- created migration file for photo_id on user  
- added file field on create user 
- added enctype on create users ( see additional notes for function)
- added upload field 
- include role id and is active as well as photo id on user model for mass assignment (see notes )..
- created photo model
- created relationship for user and photo
- fixed links for users
- added photo valideation if its existed on create user function
- added password encryption on create user function
- photos will be save on public>images
- fixed table data on users 
- created accesors for images to display them properly on the table (on Photo model)
- created edit function for users
- added link to edit user data / be mindful about routing data 
- added profile picture on edit view 
- created a new request for UsersEditRequest
- added security for admin (created middleware "admin")
- register middleware to kernel 
- created route group for admin
- created a validation to check if the  user is administrator under User model+
- created custom 404 file and 503
- fixed log out fucntion 
- fixed delete functionality
- added alert messages 
